# Copyright 2020 Marta Bianca Maria Ranzini and contributors
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

device:
  num_workers: 4               # number of workers to use in pytorch for multi-processing

training:
  seg_labels: [0, 1]           # labels to consider in the input ground truth segmentations
  inplane_size: [448, 512]     # 2D patch size, slices are either randomly cropped or padded to this dimension based on their size
  spacing: [0.8, 0.8, -1.0]    # images are resampled to this spacing in mm (use -1.0 to preserve the original spacing in given direction)
  loss_type: "dynDiceCELoss"   # loss function to use. See monaifbs.src.training.monai_dynunet_training.choose_loss_function for options
  pow_dice: 1                  # if loss has Dice loss term, defines the power to raise the Dice to. I.e. loss = Dice^pow
  batch_size_train: 14         # batch size for training
  batch_size_valid: 1          # batch size for validation, 1 is recommended
  nr_train_epochs: 20000       # number of training epochs [note: epoch is defined as extracting 1 patch per subject, so in 2D training only 1 slice is viewed per subject at each "epoch"]
  validation_every_n_epochs: 20    # number of training epochs to run in between validation loops
  lr: 1e-2                         # initial learning rate [note: LR scheduler is (1 - epoch / nr_train_epochs) ** 0.9]
  manual_seed: 0                   # set manual seed for determinism
  model_to_load: null              # path to (pre-trained) network to load for continuing training. If null, training is restarted from scratch

output:
  max_nr_models_saved: 1           # Maximum number of models to save in the output folders (older models are deleted)
  val_image_to_tensorboad: False   # Output the segmentation results for validation on tensorboard [note: memory-consuming]

log:
  message: "Training a 2D dynUNet with MONAI using Dice + Xent loss."   # Logging message to briefly describe the experiment
